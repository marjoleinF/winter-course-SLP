1357+2198+2058
2235+2250+2073
6942+1848+864+(927*5)+1794+114
16197+6558+5613+939+604+2944+3090
22935+13190
35945+180
(1354.62)/(22935+13190)
((1354.62)/(22935+13190))*16197
((1354.62)/(22935+13190))*(16197+180)
((1354.62)/(22935+13190))*6558
((1354.62)/(22935+13190))*5613
((1354.62)/(22935+13190))*939
((1354.62)/(22935+13190))*604
((1354.62)/(22935+13190))*2944
((1354.62)/(22935+13190))*3091
((1354.62)/(22935+13190))*36125
210.48+110.39
247.3+73.6
((1354.62)/(22935+13190))*2000
((1354.62)/(22935+13190))*1950
((1354.62)/(22935+13190))*1975
((1354.62)/(22935+13190))*1960
((1354.62)/(22935+13190))*1965
((1354.62)/(22935+13190))*1962
((1354.62)/(22935+13190))*(5613-1963)
((1354.62)/(22935+13190))*(5613-2944+1963)
((1354.62)/(22935+13190))*1963
2944-1963
((1354.62)/(22935+13190))*981
((1354.62)/(22935+13190))*(5613-981)
((1354.62)/(22935+13190))*(5613+
981)
2944*981
2944-981
((1354.62)/(22935+13190))*6594
((1354.62)/(22935+13190))*7122
1354.62+6004.31
1354.62+6004.31-267.06
1354.6-245.9-115.9
perc = c(13.09,19.6,15.08,14.27,18.74,19.22)
perc*2143.61
(perc*2143.61)/100
(perc*7358.93)/100
7/12
A = matrix(rnorm(200),50,4)
ginv(A)
MASS::ginv(A)
dim(MASS::ginv(A))
175+437.5+987.5+750+1375+100+175+437.5+987.5+50
175+437.5+987.5+750+1375+100+175+437.5+987.5+50+103.6+81.
175+437.5+987.5+750+1375+100+175+437.5+987.5+50+103.6+81.3
175+437.5+987.5+750+1375+100+175+437.5+987.5+50
(103.6+81.3)/2
92.45*50
5475/50
10000/40
(110*30)+(92*30)
6060/20
install.packages("biwavelet")
# Turning the package on for wavelet coherence.  If you haven't installed
# yet, then go to Packages --> Click on Install --> Search for 'biwavelet'
# --> Ok
library(biwavelet)
# Import your data
Data <- read.csv("https://dl.dropboxusercontent.com/u/18255955/Tutorials/Commodities.csv")
# Attach your data so that you can access variables directly using their
# names
attach(Data)
install.packages("WaveletComp")
25*.625
56*.6
25*.7
56*.75
680*.6
680*.06
680*.05
680*.04
55*.95
680*.43
680*.52
292+34+354
292+226+574+700+720
150*.75
530+179+600+1485
94.5/750
655.5/750
642/750
85+5+25+65+100
7264.34-7254.52
1284.7+9.82
1304.52-1290.00
14.52-4.70
1284.7-1294.53
7264.34-9.83
268+179
530+179+750+1335
750+180+476+56+1350
256+365+206+600+1173
57.77-2.22-1.65-0.25-3.40-8.46
252*.20
252*.125
252*.075
252*.175
50+32+25+19+19+19+19+44+25
75\2
.25*.75
37.50+18.75
.25*.25
.5625*113
.4375*113
114+32+19+25+19+19+19+93+25
version()
R.Version()
library(lme4)
sessionInfo()
load("F:/LEIDEN/1) onderzoek/36) Sophie Hendrikse/Leiden algoritme/resultsGICALeiden/GICAResultComp5Results/AriTruePredClusters.RData")
dim(accTable)
accTable
load("F:/LEIDEN/1) onderzoek/36) Sophie Hendrikse/Leiden algoritme/resultsGICALeiden/GICAResultComp5Results/leidenAlgoThreshold0.05.Rdata")
leidenOutput
leidenOutput[16]
leidenOutput[21:33]
leidenOutput[1:11]
leidenOutput[12:20]
leidenOutput[1:20]
((7.875*40) + (8*20)) / 60
((7.875*40) + (8.5*20)) / 60
((7.875*40) + (8.25*20)) / 60
389+383.26+7.36-24.26-132.50
389+383.26+7.36
24.26+132.50
2311+4400+489.10
.325*196
.175*196
196/2
98
98+34+64
install.packages("ClustVarLV")
library(ClustVarLV)
ciders
ClustVarLV::ciders
data(ciders)
x=runif(100)
rm(list=ls())
cat('\014')
nCases = 1000
Intercept = .15
Slope =  .45
Error = .10
X = runif(nCases)
trueY = Intercept + ( Slope * X )
Y = trueY + ( (runif(nCases)-.5) * Error )
plot( X , trueY )
plot( X , Y )
line( X , trueY )
line( X , trueY )
lines( X , trueY )
plot( X , Y , xlab='intensity' , ylab='measurement error')
lines( X , trueY )
plot( X , Y , xlab='Intensity' , ylab='Measurement error' , col=2 )
lines( X , trueY )
plot( X , Y , xlab='Intensity' , ylab='Measurement error' )
lines( X , trueY , col=2 )
rm(list=ls())
cat('\014')
nCases = 1000
Intercept = .15
Slope =  .45
Error = .10
threshold = .10
X = runif(nCases)
X[ X<threshold ] = 0
trueY = Intercept + ( Slope * X )
Y = trueY + ( (runif(nCases)-.5) * Error )
plot( X , Y , xlab='Intensity' , ylab='Measurement error' )
lines( X , trueY , col=2 )
rm(list=ls())
cat('\014')
nCases = 1000
Intercept = .15
Slope =  .45
Error = .10
threshold = .10
X = runif(nCases)
X2 = X
X2[ X2<threshold ] = 0
trueY = Intercept + ( Slope * X2 )
Y = trueY + ( (runif(nCases)-.5) * Error )
plot( X , Y , xlab='Intensity' , ylab='Measurement error' )
lines( X , trueY , col=2 )
rm(list=ls())
cat('\014')
nCases = 1000
Intercept = .15
Slope =  .45
Error = .10
threshold = .10
X = runif(nCases)
trueY = Intercept + ( Slope * X )
trueY[ X<threshold  ] = Intercept
Y = trueY + ( (runif(nCases)-.5) * Error )
plot( X , Y , xlab='Intensity' , ylab='Measurement error' )
lines( X , trueY , col=2 )
rm(list=ls())
cat('\014')
nCases = 1000
Intercept = .15
Slope =  .45
Error = .10
threshold = .10
X = runif(nCases)
X
trueY = Intercept + ( Slope * X )
plot( X , Y , xlab='Intensity' , ylab='Measurement error' )
lines( X , trueY , col=2 )
plot( X , Y , xlab='Intensity' , ylab='Measurement error' )
X = runif(nCases)
trueY = Intercept + ( Slope * X )
trueY[ X<threshold  ] = Intercept
Y = trueY + ( (runif(nCases)-.5) * Error )
plot( X , trueY , xlab='Intensity' , ylab='Measurement error' )
rm(list=ls())
cat('\014')
nCases = 1000
Intercept = .15
Slope =  .45
Error = .10
threshold = .10
X = runif(nCases)
trueY = Intercept + ( Slope * (X-threshold) )
trueY[ X<threshold  ] = Intercept
Y = trueY + ( (runif(nCases)-.5) * Error )
plot( X , trueY , xlab='Intensity' , ylab='Measurement error' )
plot( X , trueY , xlab='Intensity' , ylab='Measurement error' , xlim=c(0,1) , ylim=(0,.75) )
plot( X , trueY , xlab='Intensity' , ylab='Measurement error' , xlim=c(0,1) , ylim=c(0,.75) )
plot( X , Y , xlab='Intensity' , ylab='Measurement error' , xlim=c(0,1) , ylim=c(0,.75) )
lines( X , trueY , col=2 , lwd=4 )
rm(list=ls())
cat('\014')
nCases = 1000
Intercept = .15
Slope =  .45
Error = .10
threshold = .10
X = runif(nCases)
trueY = Intercept + ( Slope * (X-threshold) )
trueY[ X<threshold  ] = Intercept
Y = trueY + ( (runif(nCases)-.5) * Error )
plot( X , Y , xlab='Intensity' , ylab='Measurement error' , xlim=c(0,1) , ylim=c(0,.75) )
lines( X , trueY , col=2 , lwd=40 )
rm(list=ls())
cat('\014')
nCases = 1000
Intercept = .15
Slope =  .45
Error = .10
threshold = .10
X = runif(nCases)
trueY = Intercept + ( Slope * (X-threshold) )
trueY[ X<threshold  ] = Intercept
Y = trueY + ( (runif(nCases)-.5) * Error )
plot( X , Y , xlab='Intensity' , ylab='Measurement error' , xlim=c(0,1) , ylim=c(0,.75) , pch=5 )
lines( X , trueY , col=2 , lwd=4 )
rm(list=ls())
cat('\014')
nCases = 1000
Intercept = .15
Slope =  .45
Error = .10
threshold = .10
X = runif(nCases)
trueY = Intercept + ( Slope * (X-threshold) )
trueY[ X<threshold  ] = Intercept
Y = trueY + ( (runif(nCases)-.5) * Error )
plot( X , Y , xlab='Intensity' , ylab='Measurement error' , xlim=c(0,1) , ylim=c(0,.75) , cex=1 )
lines( X , trueY , col=2 , lwd=4 )
rm(list=ls())
cat('\014')
nCases = 1000
Intercept = .15
Slope =  .45
Error = .10
threshold = .10
X = runif(nCases)
trueY = Intercept + ( Slope * (X-threshold) )
trueY[ X<threshold  ] = Intercept
Y = trueY + ( (runif(nCases)-.5) * Error )
plot( X , Y , xlab='Intensity' , ylab='Measurement error' , xlim=c(0,1) , ylim=c(0,.75) , cex=.1 )
lines( X , trueY , col=2 , lwd=4 )
plot( X , trueY , col=2 , lwd=4 )
lines( X , Y )
rm(list=ls())
cat('\014')
rm(list=ls())
cat('\014')
nCases = 1000
Intercept = .15
Slope =  .45
Error = .10
threshold = .10
X = runif(nCases)
trueY = Intercept + ( Slope * (X-threshold) )
trueY[ X<threshold  ] = Intercept
Y = trueY + ( (runif(nCases)-.5) * Error )
plot( X , Y , xlab='Intensity' , ylab='Measurement error' , xlim=c(0,1) , ylim=c(0,.75) , cex=.1 )
lines( X , trueY , col=2 , lwd=4 )
plot( X , trueY , col=2 , lwd=4 )
points( X , Y )
rm(list=ls())
cat('\014')
nCases = 1000
Intercept = .15
Slope =  .45
Error = .10
threshold = .10
X = runif(nCases)
trueY = Intercept + ( Slope * (X-threshold) )
trueY[ X<threshold  ] = Intercept
Y = trueY + ( (runif(nCases)-.5) * Error )
plot( X , trueY , col=2 , lwd=4 , , xlab='Intensity' , ylab='Measurement error' , xlim=c(0,1) , ylim=c(0,.75) )
points( X , Y , cex=.20 )
rm(list=ls())
cat('\014')
nCases = 1000
Intercept = .15
Slope =  .45
Error = .10
threshold = .10
X = runif(nCases)
trueY = Intercept + ( Slope * (X-threshold) )
trueY[ X<threshold  ] = Intercept
Y = trueY + ( ( (runif(nCases)-.5) * Error ) * trueY )
plot( X , trueY , col=2 , lwd=4 , , xlab='Intensity' , ylab='Measurement error' , xlim=c(0,1) , ylim=c(0,.75) )
points( X , Y , cex=.20 )
rm(list=ls())
cat('\014')
nCases = 1000
Intercept = .15
Slope =  .45
Error = .50
threshold = .10
X = runif(nCases)
trueY = Intercept + ( Slope * (X-threshold) )
trueY[ X<threshold  ] = Intercept
Y = trueY + ( ( (runif(nCases)-.5) * Error ) * trueY )
plot( X , trueY , col=2 , lwd=4 , , xlab='Intensity' , ylab='Measurement error' , xlim=c(0,1) , ylim=c(0,.75) )
points( X , Y , cex=.20 )
rm(list=ls())
cat('\014')
nCases = 1000
Intercept = .15
Slope =  .45
Error = .50
threshold = .10
SelValue = .20
X = runif(nCases)
trueY = Intercept + ( Slope * (X-threshold) )
trueY[ X<threshold  ] = Intercept
Y = trueY + ( ( (runif(nCases)-.5) * Error ) * trueY )
SelPoints = ( runif(nCases)*trueY ) < SelValue
Yplot = Y[SelPoints]
Xplot = X[SelPoints]
plot( X , trueY , col=2 , lwd=4 , , xlab='Intensity' , ylab='Measurement error' , xlim=c(0,1) , ylim=c(0,.75) )
points( Xplot , Yplot , cex=.20 )
rm(list=ls())
cat('\014')
nCases = 1000
Intercept = .15
Slope =  .45
Error = .50
threshold = .10
SelValue = .330
X = runif(nCases)
trueY = Intercept + ( Slope * (X-threshold) )
trueY[ X<threshold  ] = Intercept
Y = trueY + ( ( (runif(nCases)-.5) * Error ) * trueY )
SelPoints = ( runif(nCases)*trueY ) < SelValue
Yplot = Y[SelPoints]
Xplot = X[SelPoints]
plot( X , trueY , col=2 , lwd=4 , , xlab='Intensity' , ylab='Measurement error' , xlim=c(0,1) , ylim=c(0,.75) )
points( Xplot , Yplot , cex=.20 )
rm(list=ls())
cat('\014')
nCases = 1000
Intercept = .15
Slope =  .45
Error = .50
threshold = .10
SelValue = .15
X = runif(nCases)
trueY = Intercept + ( Slope * (X-threshold) )
trueY[ X<threshold  ] = Intercept
Y = trueY + ( ( (runif(nCases)-.5) * Error ) * trueY )
SelPoints = ( runif(nCases)*trueY ) < SelValue
Yplot = Y[SelPoints]
Xplot = X[SelPoints]
plot( X , trueY , col=2 , lwd=4 , , xlab='Intensity' , ylab='Measurement error' , xlim=c(0,1) , ylim=c(0,.75) )
points( Xplot , Yplot , cex=.50 )
rm(list=ls())
cat('\014')
nCases = 1000
Intercept = .15
Slope =  .45
Error = .50
threshold = .10
SelValue = .15
X = runif(nCases)
trueY = Intercept + ( Slope * (X-threshold) )
trueY[ X<threshold  ] = Intercept
Y = trueY + ( ( (runif(nCases)-.5) * Error ) * trueY )
SelPoints = ( runif(nCases)*trueY ) < SelValue
Yplot = Y[SelPoints]
Xplot = X[SelPoints]
plot( X , trueY , col=2 , lwd=4 , , xlab='Intensity' , ylab='Measurement error' , xlim=c(0,1) , ylim=c(0,.75) )
points( Xplot , Yplot , cex=.25 )
rm(list=ls())
cat('\014')
nCases = 1000
Intercept = .15
Slope =  .45
Error = .50
threshold = .10
SelValue = .10
X = runif(nCases)
trueY = Intercept + ( Slope * (X-threshold) )
trueY[ X<threshold  ] = Intercept
Y = trueY + ( ( (runif(nCases)-.5) * Error ) * trueY )
SelPoints = ( runif(nCases)*trueY ) < SelValue
Yplot = Y[SelPoints]
Xplot = X[SelPoints]
plot( X , trueY , col=2 , lwd=4 , , xlab='Intensity' , ylab='Measurement error' , xlim=c(0,1) , ylim=c(0,.75) )
points( Xplot , Yplot , cex=.25 )
rm(list=ls())
cat('\014')
nCases = 1000
Intercept = .15
Slope =  .45
Error = .50
threshold = .10
SelValue = .10
X = runif(nCases)
trueY = Intercept + ( Slope * (X-threshold) )
trueY[ X<threshold  ] = Intercept
Y = trueY + ( ( (runif(nCases)-.5) * Error ) * trueY )
SelPoints = ( runif(nCases)*trueY ) < SelValue
Yplot = Y[SelPoints]
Xplot = X[SelPoints]
plot( X , trueY , col=2 , lwd=4 , , xlab='Intensity' , ylab='Measurement error' , xlim=c(0,1) , ylim=c(0,.75) )
points( Xplot , Yplot , cex=.35 )
11.50*8
15*6.50
92+97.5
153+72.40
225.4*2
189.50+450.80
640.3+15489
46*251
33+26+4
15*6.5
8*11.5
11546+45+62.5+63+189.5+208+450.8+3500
502+189.5+450.8+208
11209+1350
30*.5
30*.75
rand(10)
sample(1:10)
sample(1:10)
rand(10)
sample(1:10)
rand(10)
rand(10)
rand(10)
sample(1:10)
sample(1:10)
sample(1:10)
sample(1:10)
sample(1:10)
rand(10)
sample(1:10)
rand(10)
sample(1:10)
sample(1:10)
sample(1:10)
sample(1:10)
sample(1:10)
rand(10)
sample(1:10)
rand(10)
sample(1:10)
sample(1:10)
sample(1:10)
sample(1:10)
sample(1:10)
sample(1:10)
sample(1:11)
sample(1:11)
sample(1:11)
sample(1:11)
sample(1:11)
sample(1:11)
sample(1:11)
sample(1:11)
sample(1:11)
sample(1:11)
sample(1:11)
sample(1:11)
sample(1:11)
sample(1:11)
setwd("//vuw/Personal$/Homes/W/wilderjanstf/Desktop/1) Werk Leiden/2) Onderwijs/9) Statistical learning and prediction (IOPS)/IOPS 19-20/materials/session2/Workshop SLP_Session2_practical_solutions")
setwd("//vuw/Personal$/Homes/W/wilderjanstf/Desktop/1) Werk Leiden/2) Onderwijs/9) Statistical learning and prediction (IOPS)/IOPS 19-20/materials/session3/Workshop SLP_Session3_practical_solutions")
setwd("//vuw/Personal$/Homes/W/wilderjanstf/Desktop/1) Werk Leiden/2) Onderwijs/9) Statistical learning and prediction (IOPS)/IOPS 19-20/materials/session4/Workshop SLP_Session4_practical")
